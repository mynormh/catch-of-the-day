{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","Fragment","action","className","onSubmit","this","type","ref","placeholder","defaultValue","required","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","orderTransitionOptions","classNames","timeout","enter","exit","react_transition_group","component","name","price","onClick","removeFromOrder","_this2","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","objectSpread","defineProperty","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","_this$props$details","details","src","alt","disabled","App","Date","now","sampleFishes","params","match","syncState","localStorageRef","localStorage","getItem","JSON","parse","setItem","stringify","removeBinding","components_Header","age","cool","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.ab93c302.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from '../helpers';\n\nclass StorePicker extends React.Component {\n  // One way to bind custom methods to the instance of the component\n  // constructor() {\n  //   super()\n  //   // Explicitly bind our own methods to the instance of the Component\n  //   this.goToStore = this.goToStore.bind(this);\n  // }\n  myInput = React.createRef();\n\n  static propTypes = {\n    history: PropTypes.object\n  };\n\n  // Bind custom method to the instance of the component using class property and arrow function\n  goToStore = event => {\n    // Stop the form from submitting and reloading the page\n    event.preventDefault();\n    // Get the text from the input\n    const storeName = this.myInput.current.value;\n    // Change the route\n    this.props.history.push(`/store/${storeName}`);\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <form action=\"\" className=\"store-selector\" onSubmit={this.goToStore}>\n          <h2>Please Enter A Store</h2>\n          <input\n            type=\"text\"\n            ref={this.myInput}\n            placeholder=\"Store Name\"\n            defaultValue={getFunName()}\n            required\n          />\n          <button type=\"submit\">Visit Store -></button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = props => (\n  <header className=\"top\">\n    <h1>\n      Catch\n      <span className=\"ofThe\">\n        <span className=\"of\">Of</span>\n        <span className=\"the\">The</span>\n      </span>\n      Day\n    </h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nclass Order extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func\n  };\n\n  // renderOrder acts as a sort of render() function just to declutter the render function\n  renderOrder = key => {\n    const fish = this.props.fishes[key];\n    const count = this.props.order[key];\n    // Check fish first in case it hasn't loaded from rebase yet\n    const isAvailable = fish && fish.status === 'available';\n    // Create an object for transition options that are used more than once\n    const orderTransitionOptions = {\n      classNames: 'order',\n      key,\n      timeout: { enter: 500, exit: 500 }\n    };\n    // Make sure the fish is loaded before it continues, by rendering null it will exit immediately (avoiding blinking unavailable state)\n    if (!fish) return null;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...orderTransitionOptions}>\n          <li key={key}>\n            Sorry {fish ? fish.name : 'fish'} is no longer available\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...orderTransitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              {/* By making the count the key for CSSTransition it will create two different spans one for the new count and one for the previous one. */}\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const fish = this.props.fishes[key];\n      const count = this.props.order[key];\n      // We check fish first in case fish is deleted entirely from state (e.g. from DevTools) or not loaded yet from rebase\n      const isAvailable = fish && fish.status === 'available';\n\n      if (isAvailable) {\n        return prevTotal + count * fish.price;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propTypes = {\n    addFish: PropTypes.func\n  };\n\n  createFish = event => {\n    event.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addFish(fish);\n    // Refresh the form\n    event.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"text\"\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n        <input\n          name=\"image\"\n          ref={this.imageRef}\n          type=\"text\"\n          placeholder=\"Image\"\n        />\n        <button type=\"submit\">+ Add Fish</button>\n      </form>\n    );\n  }\n}\n\nexport default AddFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component {\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      description: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func\n  };\n  handleChange = event => {\n    console.log(event.currentTarget.value);\n    // Update that fish\n    // Take a copy of the current fish\n    const updatedFish = {\n      ...this.props.fish,\n      [event.currentTarget.name]: event.currentTarget.value\n    };\n    this.props.updateFish(this.props.index, updatedFish);\n  };\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.fish.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.fish.price}\n        />\n        <select\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.fish.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.fish.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.fish.image}\n        />\n        {/* We don't need an entire function so we can just inline the delete function */}\n        <button onClick={() => this.props.deleteFish(this.props.index)}>\n          Remove Fish\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = props => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory</p>\n    <button className=\"github\" onClick={() => props.authenticate('Github')}>\n      Login In With Github\n    </button>\n    <button className=\"facebook\" onClick={() => props.authenticate('Facebook')}>\n      Login In With Facebook\n    </button>\n    <button className=\"twitter\" onClick={() => props.authenticate('Twitter')}>\n      Login In With Twitter\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;\n","import Rebase from 're-base';\nimport * as firebase from 'firebase/app';\nimport 'firebase/database';\n\n// Create firebase app\nconst firebaseApp = firebase.initializeApp({\n  apiKey: 'AIzaSyBkau_hb0CTw2GT2jJDgg-tbY8zT3ogY0g',\n  authDomain: 'catch-of-the-day-mynor.firebaseapp.com',\n  databaseURL: 'https://catch-of-the-day-mynor.firebaseio.com'\n});\n\n// Create Rebase bindings\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This is a named export\nexport { firebaseApp };\n\n// This is a default export\nexport default base;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func\n  };\n\n  state = {\n    uid: null,\n    owner: null\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async authData => {\n    // Look up the current store in the firebase DB\n    const store = await base.fetch(this.props.storeId, { context: this });\n    console.log(store);\n    // Claim it if there is no owner\n    if (!store.owner) {\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      });\n    }\n    // Set the state of the inventory component to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    });\n  };\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  };\n\n  logout = async () => {\n    console.log('Logging out!');\n    await firebase.auth().signOut();\n    this.setState({\n      uid: null\n    });\n  };\n\n  render() {\n    const logout = <button onClick={this.logout}>Log Out!</button>;\n    // Check if they're logged in\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n\n    // Check if they are not the owner of the store\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry you are not the owner!</p>\n          {logout}\n        </div>\n      );\n    }\n\n    // They must be the owner\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory!!!</h2>\n        {logout}\n        {Object.keys(this.props.fishes).map(key => (\n          <EditFishForm\n            key={key}\n            index={key}\n            fish={this.props.fishes[key]}\n            updateFish={this.props.updateFish}\n            deleteFish={this.props.deleteFish}\n          />\n        ))}\n        <AddFishForm addFish={this.props.addFish} />\n        <button onClick={this.props.loadSampleFishes}>\n          Load Sample Fishes\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends React.Component {\n  // static makes it so propTypes is only declared once, since it'll be the same for every Fish Component\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      description: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func\n  };\n  handleClick = () => {\n    this.props.addToOrder(this.props.index);\n  };\n\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === 'available';\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button disabled={!isAvailable} onClick={this.handleClick}>\n          {isAvailable ? 'Add To Cart' : 'Sold Out'}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Fish;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {}\n  };\n\n  static propTypes = {\n    match: PropTypes.object\n  };\n\n  componentDidMount() {\n    // Not to be confused with input refs, this is a firebase ref that makes reference to a piece of data in the DB which will be useful in componentWillUnmount\n    const { params } = this.props.match; // Take the props given by React Router\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      context: this,\n      state: 'fishes'\n    }); // Only sync the fished data of the current store\n\n    // Reinstate localStorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n\n  componentWillUnmount() {\n    // Unlistens to changes in the database assigned in componentDidMount\n    base.removeBinding(this.ref);\n  }\n\n  addFish = fish => {\n    // Take a copy of the existing state\n    const fishes = { ...this.state.fishes };\n    // Add our new fish to the new fishes variable\n    fishes[`fish${Date.now()}`] = fish;\n    // Set the new fishes object to state\n    this.setState({ fishes });\n  };\n\n  updateFish = (key, updatedFish) => {\n    // Take a copy of the current state\n    const fishes = { ...this.state.fishes };\n    // Update that state\n    fishes[key] = updatedFish;\n    // Set that to state\n    this.setState({ fishes });\n  };\n\n  deleteFish = key => {\n    // Take a copy of current state\n    const fishes = { ...this.state.fishes };\n    // Update the state (to remove it from firebase we have to set it to null)\n    fishes[key] = null;\n    // Set that to state\n    this.setState({ fishes });\n  };\n\n  loadSampleFishes = () => {\n    // No need to create a copy of state first because it will contain only the sampleFishes\n    console.log(sampleFishes);\n    this.setState({ fishes: sampleFishes });\n  };\n\n  addToOrder = key => {\n    // Take a copy of state\n    const order = { ...this.state.order };\n    // Add to order or update order (short circuit with order.fish1 if it exists or not)\n    order[key] = order[key] + 1 || 1;\n    // Call setState to update state object\n    this.setState({ order });\n  };\n\n  removeFromOrder = key => {\n    const order = { ...this.state.order };\n    // Order isn't mirrored to firebase so no need to set it to null\n    delete order[key];\n    this.setState({ order });\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline={'Fresh Seafood market'} age={500} cool={true} />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.fishes).map(key => (\n              // We pass the fish data using the details prop and assign to it the respective element of the array using key\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          deleteFish={this.deleteFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found!!!</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\nrender(<Router />, document.querySelector('#main'));\n"],"sourceRoot":""}